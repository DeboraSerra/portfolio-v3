import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { GetStaticPaths, GetStaticProps, GetStaticPropsContext } from 'next'
import Projects from '@/backend/projects.controller'
import { useRouter } from 'next/router'
import { Modules, Project } from '@/helpers/interfaces'

const inter = Inter({ subsets: ['latin'] })

const titles = {
  personal: 'Personal',
  front_end: 'Front End',
  back_end: 'Back End',
  computer_science: 'Computer Science',
  fundaments: 'Fundaments',
  uol: 'UOL Host',
}

export default function Module({ projects }: { projects: Project[] }) {
  const { query: { module } } = useRouter()
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <h1>{titles[module as Modules]}</h1>
      </main>
    </>
  )
}

export async function getStaticPaths() {
  const routes = await Projects.getPaths();
  const paths = routes.map(({ route }) => ({
    params: { module: route }
  }))
  return {
    paths,
    fallback: false,
  }
}

interface Route extends GetStaticPropsContext {
  params: { module: Modules, }
}

export const getStaticProps = async ({ params }: Route) => {
  const { module } = params;
  const projects = await Projects.getByModule(module);
  if (!projects || projects.length === 0) return { notFound: true }
  return {
    props: {
      projects,
    },
  }
}
